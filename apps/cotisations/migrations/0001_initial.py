# Generated by Django 5.1.8 on 2025-07-05 14:06

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_alter_statut_options_statut_type_entite'),
        ('membres', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfigurationCotisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('cle', models.CharField(max_length=50, unique=True, verbose_name='Clé')),
                ('valeur', models.TextField(verbose_name='Valeur')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Configuration de cotisation',
                'verbose_name_plural': 'Configurations de cotisations',
                'ordering': ['cle'],
            },
        ),
        migrations.CreateModel(
            name='HistoriqueTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('cotisation', 'Cotisation'), ('paiement', 'Paiement')], max_length=10)),
                ('reference_id', models.IntegerField()),
                ('action', models.CharField(choices=[('creation', 'Création'), ('modification', 'Modification'), ('suppression', 'Suppression')], max_length=12)),
                ('details', models.JSONField(blank=True, null=True)),
                ('utilisateur_id', models.IntegerField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Historique de transaction',
                'verbose_name_plural': 'Historique des transactions',
                'db_table': 'historique_transactions',
            },
        ),
        migrations.CreateModel(
            name='ModePaiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('libelle', models.CharField(max_length=50, unique=True, verbose_name='Libellé')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name': 'Mode de paiement',
                'verbose_name_plural': 'Modes de paiement',
                'ordering': ['libelle'],
            },
        ),
        migrations.CreateModel(
            name='BaremeCotisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant')),
                ('date_debut_validite', models.DateField(default=django.utils.timezone.now, verbose_name='Date de début de validité')),
                ('date_fin_validite', models.DateField(blank=True, null=True, verbose_name='Date de fin de validité')),
                ('periodicite', models.CharField(choices=[('mensuelle', 'Mensuelle'), ('trimestrielle', 'Trimestrielle'), ('semestrielle', 'Semestrielle'), ('annuelle', 'Annuelle'), ('unique', 'Unique')], default='annuelle', max_length=20, verbose_name='Périodicité')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('type_membre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='baremes', to='membres.typemembre', verbose_name='Type de membre')),
            ],
            options={
                'verbose_name': 'Barème de cotisation',
                'verbose_name_plural': 'Barèmes de cotisations',
                'ordering': ['-date_debut_validite'],
            },
        ),
        migrations.CreateModel(
            name='Cotisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant')),
                ('date_emission', models.DateField(default=django.utils.timezone.now, verbose_name="Date d'émission")),
                ('date_echeance', models.DateField(verbose_name="Date d'échéance")),
                ('periode_debut', models.DateField(verbose_name='Début de période couverte')),
                ('periode_fin', models.DateField(blank=True, null=True, verbose_name='Fin de période couverte')),
                ('mois', models.IntegerField(blank=True, null=True, verbose_name='Mois')),
                ('annee', models.IntegerField(verbose_name='Année')),
                ('statut_paiement', models.CharField(choices=[('non_payee', 'Non payée'), ('partiellement_payee', 'Partiellement payée'), ('payee', 'Payée')], default='non_payee', max_length=20, verbose_name='Statut de paiement')),
                ('montant_restant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant restant à payer')),
                ('reference', models.CharField(help_text='Référence unique de la cotisation', max_length=50, unique=True, verbose_name='Référence')),
                ('commentaire', models.TextField(blank=True, null=True, verbose_name='Commentaire')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Métadonnées')),
                ('bareme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cotisations', to='cotisations.baremecotisation', verbose_name='Barème utilisé')),
                ('cree_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cotisations_creees', to=settings.AUTH_USER_MODEL, verbose_name='Créée par')),
                ('membre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cotisations', to='membres.membre', verbose_name='Membre')),
                ('modifie_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cotisations_modifiees', to=settings.AUTH_USER_MODEL, verbose_name='Modifiée par')),
                ('statut', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cotisations', to='core.statut', verbose_name='Statut')),
                ('type_membre', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cotisations', to='membres.typemembre', verbose_name='Type de membre')),
            ],
            options={
                'verbose_name': 'Cotisation',
                'verbose_name_plural': 'Cotisations',
                'ordering': ['-date_emission'],
            },
        ),
        migrations.CreateModel(
            name='HistoriqueCotisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('action', models.CharField(max_length=50, verbose_name='Action')),
                ('details', models.JSONField(default=dict, verbose_name='Détails')),
                ('date_action', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date de l'action")),
                ('adresse_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Adresse IP')),
                ('commentaire', models.TextField(blank=True, null=True, verbose_name='Commentaire')),
                ('cotisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historique', to='cotisations.cotisation', verbose_name='Cotisation')),
                ('utilisateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='historique_cotisations', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Historique de cotisation',
                'verbose_name_plural': 'Historique des cotisations',
                'ordering': ['-date_action'],
            },
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant')),
                ('date_paiement', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de paiement')),
                ('reference_paiement', models.CharField(blank=True, max_length=100, null=True, verbose_name='Référence de paiement')),
                ('devise', models.CharField(default='EUR', max_length=3, verbose_name='Devise')),
                ('type_transaction', models.CharField(choices=[('paiement', 'Paiement'), ('remboursement', 'Remboursement'), ('rejet', 'Rejet')], default='paiement', max_length=20, verbose_name='Type de transaction')),
                ('recu_envoye', models.BooleanField(default=False, verbose_name='Reçu envoyé')),
                ('commentaire', models.TextField(blank=True, null=True, verbose_name='Commentaire')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Métadonnées')),
                ('cotisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='cotisations.cotisation', verbose_name='Cotisation')),
                ('cree_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements_crees', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('mode_paiement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements', to='cotisations.modepaiement', verbose_name='Mode de paiement')),
                ('modifie_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements_modifies', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
                ('statut', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements', to='core.statut', verbose_name='Statut')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'ordering': ['-date_paiement'],
            },
        ),
        migrations.CreateModel(
            name='Rappel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('type_rappel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('courrier', 'Courrier'), ('appel', 'Appel téléphonique')], max_length=20, verbose_name='Type de rappel')),
                ('contenu', models.TextField(blank=True, null=True, verbose_name='Contenu')),
                ('etat', models.CharField(choices=[('planifie', 'Planifié'), ('envoye', 'Envoyé'), ('echoue', 'Échoué'), ('lu', 'Lu')], default='planifie', max_length=20, verbose_name='État')),
                ('niveau', models.PositiveSmallIntegerField(default=1, help_text='Niveau de priorité/sévérité du rappel (1: premier rappel, 2: relance, etc.)', verbose_name='Niveau de rappel')),
                ('date_envoi', models.DateTimeField(default=django.utils.timezone.now, help_text='Date à laquelle le rappel doit être envoyé', verbose_name="Date d'envoi planifiée")),
                ('date_envoi_reel', models.DateTimeField(blank=True, help_text='Date à laquelle le rappel a été effectivement envoyé', null=True, verbose_name="Date d'envoi réelle")),
                ('resultat', models.TextField(blank=True, help_text="Résultat de l'envoi ou commentaire sur le suivi", null=True, verbose_name='Résultat/Retour')),
                ('cotisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rappels', to='cotisations.cotisation', verbose_name='Cotisation')),
                ('cree_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rappels_crees', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('membre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rappels', to='membres.membre', verbose_name='Membre')),
            ],
            options={
                'verbose_name': 'Rappel',
                'verbose_name_plural': 'Rappels',
                'ordering': ['-date_envoi'],
            },
        ),
        migrations.AddIndex(
            model_name='cotisation',
            index=models.Index(fields=['membre'], name='cotisations_membre__8f7172_idx'),
        ),
        migrations.AddIndex(
            model_name='cotisation',
            index=models.Index(fields=['date_echeance'], name='cotisations_date_ec_7f2666_idx'),
        ),
        migrations.AddIndex(
            model_name='cotisation',
            index=models.Index(fields=['statut_paiement'], name='cotisations_statut__2d431b_idx'),
        ),
        migrations.AddIndex(
            model_name='cotisation',
            index=models.Index(fields=['annee', 'mois'], name='cotisations_annee_081201_idx'),
        ),
        migrations.AddIndex(
            model_name='historiquecotisation',
            index=models.Index(fields=['cotisation'], name='cotisations_cotisat_965946_idx'),
        ),
        migrations.AddIndex(
            model_name='historiquecotisation',
            index=models.Index(fields=['date_action'], name='cotisations_date_ac_99cb5b_idx'),
        ),
        migrations.AddIndex(
            model_name='historiquecotisation',
            index=models.Index(fields=['action'], name='cotisations_action_0f1441_idx'),
        ),
        migrations.AddIndex(
            model_name='paiement',
            index=models.Index(fields=['cotisation'], name='cotisations_cotisat_84037a_idx'),
        ),
        migrations.AddIndex(
            model_name='paiement',
            index=models.Index(fields=['date_paiement'], name='cotisations_date_pa_c86886_idx'),
        ),
        migrations.AddIndex(
            model_name='paiement',
            index=models.Index(fields=['type_transaction'], name='cotisations_type_tr_6ba328_idx'),
        ),
        migrations.AddIndex(
            model_name='rappel',
            index=models.Index(fields=['membre'], name='cotisations_membre__73b8d7_idx'),
        ),
        migrations.AddIndex(
            model_name='rappel',
            index=models.Index(fields=['cotisation'], name='cotisations_cotisat_fdf99a_idx'),
        ),
        migrations.AddIndex(
            model_name='rappel',
            index=models.Index(fields=['date_envoi'], name='cotisations_date_en_4ee121_idx'),
        ),
        migrations.AddIndex(
            model_name='rappel',
            index=models.Index(fields=['etat'], name='cotisations_etat_afb921_idx'),
        ),
    ]

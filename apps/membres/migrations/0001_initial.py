# Generated by Django 5.1.8 on 2025-04-04 12:39

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TypeMembre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('libelle', models.CharField(max_length=100, unique=True, verbose_name='Libellé')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('cotisation_requise', models.BooleanField(default=True, verbose_name='Cotisation requise')),
                ('ordre_affichage', models.PositiveSmallIntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Type de membre',
                'verbose_name_plural': 'Types de membres',
                'ordering': ['ordre_affichage', 'libelle'],
            },
        ),
        migrations.CreateModel(
            name='Membre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('telephone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Téléphone')),
                ('adresse', models.CharField(blank=True, max_length=255, null=True, verbose_name='Adresse')),
                ('code_postal', models.CharField(blank=True, max_length=20, null=True, verbose_name='Code postal')),
                ('ville', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ville')),
                ('date_adhesion', models.DateField(default=django.utils.timezone.now, verbose_name="Date d'adhésion")),
                ('date_naissance', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('langue', models.CharField(choices=[('fr', 'Français'), ('en', 'Anglais'), ('de', 'Allemand'), ('es', 'Espagnol')], default='fr', max_length=2, verbose_name='Langue préférée')),
                ('pays', models.CharField(blank=True, default='France', max_length=50, null=True, verbose_name='Pays')),
                ('commentaires', models.TextField(blank=True, null=True, verbose_name='Commentaires')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='membres/photos/', verbose_name='Photo')),
                ('accepte_mail', models.BooleanField(default=True, verbose_name='Accepte les communications par email')),
                ('accepte_sms', models.BooleanField(default=False, verbose_name='Accepte les communications par SMS')),
                ('statut', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.statut', verbose_name='Statut')),
                ('utilisateur', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='membre', to=settings.AUTH_USER_MODEL, verbose_name='Compte utilisateur')),
            ],
            options={
                'verbose_name': 'Membre',
                'verbose_name_plural': 'Membres',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='MembreTypeMembre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateField(verbose_name='Date de début')),
                ('date_fin', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('commentaire', models.TextField(blank=True, null=True, verbose_name='Commentaire')),
                ('membre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='types_historique', to='membres.membre', verbose_name='Membre')),
                ('modifie_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modifications_types_membres', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
                ('type_membre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membres_historique', to='membres.typemembre', verbose_name='Type de membre')),
            ],
            options={
                'verbose_name': 'Historique de type de membre',
                'verbose_name_plural': 'Historiques de types de membres',
                'ordering': ['-date_debut'],
            },
        ),
        migrations.AddField(
            model_name='membre',
            name='types',
            field=models.ManyToManyField(related_name='membres', through='membres.MembreTypeMembre', to='membres.typemembre', verbose_name='Types de membre'),
        ),
        migrations.CreateModel(
            name='HistoriqueMembre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('action', models.CharField(max_length=50, verbose_name='Action')),
                ('description', models.TextField(verbose_name='Description')),
                ('donnees_avant', models.JSONField(blank=True, null=True, verbose_name='Données avant')),
                ('donnees_apres', models.JSONField(blank=True, null=True, verbose_name='Données après')),
                ('utilisateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='historique_membres', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('membre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historique', to='membres.membre', verbose_name='Membre')),
            ],
            options={
                'verbose_name': 'Historique de membre',
                'verbose_name_plural': 'Historique des membres',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['membre', '-created_at'], name='membres_his_membre__523573_idx'), models.Index(fields=['action'], name='membres_his_action_c95cf5_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='membretypemembre',
            index=models.Index(fields=['membre', 'type_membre'], name='membres_mem_membre__a7ce6b_idx'),
        ),
        migrations.AddIndex(
            model_name='membretypemembre',
            index=models.Index(fields=['date_debut', 'date_fin'], name='membres_mem_date_de_db8c87_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='membretypemembre',
            unique_together={('membre', 'type_membre', 'date_debut')},
        ),
        migrations.AddIndex(
            model_name='membre',
            index=models.Index(fields=['nom', 'prenom'], name='membres_mem_nom_849d64_idx'),
        ),
        migrations.AddIndex(
            model_name='membre',
            index=models.Index(fields=['email'], name='membres_mem_email_675e02_idx'),
        ),
        migrations.AddIndex(
            model_name='membre',
            index=models.Index(fields=['date_adhesion'], name='membres_mem_date_ad_48fe5b_idx'),
        ),
    ]
